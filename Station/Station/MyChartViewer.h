/* **********************************************************
* 功能：图标绘制 
*	
* 使用：(1) 初始化
*		(2) 赋值：曲线数据(容器)
        (3) 图形变化
* 修改日期：
* 		2016.4.08----------解永平
* **********************************************************/


#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
#include <Afxtempl.h>
#include "ChartViewer.h"

//--------------------------------------------------------------------------------------------------	
//	类定义：CMyChartViewer
//--------------------------------------------------------------------------------------------------
class CMyChartViewer : public CChartViewer
{
// Construction
public:
	CMyChartViewer();
	virtual ~CMyChartViewer();              

// Attributes
public:

// Operations
public:

// Overrides
	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(CMyListCtrl)
	//}}AFX_VIRTUAL

// Implementation
public:
	//--------------------------------------------------------------------------------------------------	
	//	函数定义	
	//--------------------------------------------------------------------------------------------------
	void	drawChart(CChartViewer *viewer);							//Line
	void	drawChart_Bar(CChartViewer *viewer);						//Bar
	void	initChartViewer(CChartViewer *viewer);						//
	void	trackLineLabel(XYChart *c, int mouseX, bool v_bLable);		//
	int		getDefaultBgColor();										//

	//自定义--------------------------------------------------------------------------------------------
	int		My_GetChart_Color(int v_iNum);								//获取Chart颜色 [依据颜色序号]

	//--------------------------------------------------------------------------------------------------
	//	业务数据：曲线绘图数据【保存多条信息，每条信息对应一条曲线】
	//	工    作：【1】清除数据；【2】保存数据(名称、颜色、数据)；【3】曲线绘制；
	//--------------------------------------------------------------------------------------------------
	mChart_Data		v_mChart_Data;										//Chart_Data

	//--------------------------------------------------------------------------------------------------
	//	Ｘ轴数据：粒度信息【根据时间间隔、查询日期范围，计算出各个粒度的日期，保存在数组中】
	//	工    作：【1】粒度计算(间隔、日期)；【2】；
	//--------------------------------------------------------------------------------------------------
	double*			v_dTime_Stamps;										//X轴：粒度数据【各个粒度的时间信息：绘制X轴信息】
	mTime_Array		v_mTime_Array;										//容器：【时间粒度--数组位置：保存数据时，依据时间换算各个粒度在数据数组中的序号】

	//--------------------------------------------------------------------------------------------------
	//	Chart数据：绘图  
	//--------------------------------------------------------------------------------------------------
	int				v_iTime_Sum;										//粒度总数【天数*每天粒度：用于获取数据】
	int				v_iTime_Show;										//显示粒度总数【天数*每天粒度 或者 每天粒度：用于X轴显示】
	int				v_iBgColor;											//The default background color.

	//--------------------------------------------------------------------------------------------------
	//	UI传递数据：绘图	[绘图的控制信息，依据用户在界面上的选择]
	//--------------------------------------------------------------------------------------------------
	struct	UI_Data
	{
		//绘图参数
		COleDateTime	v_dDate_Start;									//查询开始日期
		int		v_iChart_Day_Sum;										//查询天数
		int		v_iDay;													//单天有效
		int		v_iMuti_Line;											//多线有效
		int		v_iKPI_S;												//静态有效
		int		v_iPoint;												//数据点有效
		int		v_iMin;													//Min
		int		v_iMax;													//Max
		int		v_iY_scale;												//y轴刻度有效
		int		v_iTime;												//粒度：0/1/2/3/4：分/时/天/周/月
		int		v_iBar_3d;												//Bar：3D有效
		int		v_iBar_Type;											//Bar：类型

		//初始参数
		CString	v_sKPI_Name;											//选中KPI条目的KPI_Name
		int		v_iChart_X0,v_iChart_Y0;								//起点
		int		v_iChart_X,v_iChart_Y;									//窗口尺寸
	};
	UI_Data		v_cUI_Data;												//UI信息
	
};

//----------------------------------------------------------------------------------------------------------
//	End
//----------------------------------------------------------------------------------------------------------
